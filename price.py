import yfinance as yf

# –¢–∏–∫–µ—Ä—ã –¥–ª—è –±–∏—Ç–∫–æ–∏–Ω–∞, USD/RUB, EUR/RUB –∏ –Ω–µ—Ñ—Ç–∏
tickers = {
    'Bitcoin': 'BTC-USD',
    'USD/RUB': 'USDRUB=X',
    'EUR/RUB': 'EURRUB=X',
    'Brent Crude Oil': 'BZ=F'  # –∏–ª–∏ WTI Crude Oil 'CL=F'
}

# –ü–µ—Ä–∏–æ–¥ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5 –¥–Ω–µ–π)
period = "5d"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω
def get_prices():
    prices = {}

    for name, ticker in tickers.items():
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ç–∏–∫–µ—Ä–∞
        stock = yf.Ticker(ticker)

        # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
        data = stock.history(period=period)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ DataFrame –Ω–µ –ø—É—Å—Ç–æ–π –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
        if not data.empty and len(data) > 0:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–µ–Ω—É –∑–∞–∫—Ä—ã—Ç–∏—è
            last_price = data['Close'].iloc[-1]
            # –û–∫—Ä—É–≥–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å
            if name == 'Bitcoin':
                prices['btc_price'] = round(last_price, 1)
            elif name == 'USD/RUB':
                prices['usd_rub'] = round(last_price, 4)
            elif name == 'EUR/RUB':
                prices['eur_rub'] = round(last_price, 3)
            elif name == 'Brent Crude Oil':
                prices['oil_price'] = round(last_price, 2)
        else:
            prices[name] = None  # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º None

    return prices


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω –Ω–∞ –∞–≥—Ä–æ–∫—É–ª—å—Ç—É—Ä—ã —Å –±–∏—Ä–∂ CME –∏ MATIF
def get_cme_matif_prices():
    # CME (–ß–∏–∫–∞–≥—Å–∫–∞—è –±–∏—Ä–∂–∞)
    cme_tickers = {
        '–ü—à–µ–Ω–∏—Ü–∞': 'ZW=F',
        '–ö—É–∫—É—Ä—É–∑–∞': 'ZC=F',
        '–°–æ–µ–≤—ã–µ –±–æ–±—ã': 'ZS=F',
    }
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    cme_output = "CHICAGO - "
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è CME
    for name, ticker in cme_tickers.items():
        stock = yf.Ticker(ticker)
        data = stock.history(period='1d')
        if not data.empty:
            last_price = data['Close'].iloc[-1]
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç—Ä–æ–∫—É —Å –∑–∞–ø—è—Ç–æ–π
            if name == "–ü—à–µ–Ω–∏—Ü–∞":
                cme_output += f"{last_price:.2f}$ wheatüåæ, "
            elif name == "–ö—É–∫—É—Ä—É–∑–∞":
                cme_output += f"{last_price:.2f}$ cornüåΩ, "
            elif name == "–°–æ–µ–≤—ã–µ –±–æ–±—ã":
                cme_output += f"{last_price:.2f}$ soybeansüçà"
        else:
            cme_output += f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {name.lower()}üåæ, "

    # –£–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø—è—Ç—É—é –∏ –ø—Ä–æ–±–µ–ª
    if cme_output.endswith(", "):
        cme_output = cme_output[:-2]

    return cme_output


# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
prices_cme = get_cme_matif_prices()
prices = get_prices()

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥
final_output = (
    
    f"üíµ USD - {prices.get('usd_rub', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}‚ÇΩ "
    f"üí∂ Euro - {prices.get('eur_rub', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}‚ÇΩ "
    f"üò± Bitcoin ‚Äì {prices.get('btc_price', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}$ "
    f"üõ¢ Petroleum ‚Äì {prices.get('oil_price', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')}$"
)
#f"{prices_cme}\n"

ticker = {
    'Wheat_CHICAGO': 'ZW=F',      # –ü—à–µ–Ω–∏—Ü–∞ –Ω–∞ CME
    'Soybeans_CHICAGO': 'ZS=F',   # –°–æ—è –Ω–∞ CME
    'Corn_CHICAGO': 'ZC=F',       # –ö—É–∫—É—Ä—É–∑–∞ –Ω–∞ CME
       # –†–∞–ø—Å –Ω–∞ MATIF
}
def get_latest_data(ticker_dict):
    data = {}
    for name, ticker in ticker_dict.items():
        stock = yf.Ticker(ticker)
        latest_data = stock.history(period="1mo")  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å
        if not latest_data.empty:
            latest_close = latest_data['Close'].iloc[-1]
            data[name] = latest_close
    return data

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–∞–Ω–Ω—ã—Ö
commodity_data = get_latest_data(ticker)
txt=f"CHICAGO - {commodity_data['Wheat_CHICAGO']}$ wheatüåæ, {commodity_data['Soybeans_CHICAGO']}$ soybeansüçà, {commodity_data['Corn_CHICAGO']}$ cornüåΩ "