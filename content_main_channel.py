from config import OPENAI_API_KEY, API_TOKEN, CHANNEL_ID_MAIN
import openai
from aiogram import Bot
import logging
import os
from aiogram import Router
from price import get_telegram_subscribers
from aiogram import Bot, Dispatcher

openai.api_key = OPENAI_API_KEY
bot = Bot(token=API_TOKEN)
router = Router()
ADMIN_ID = 947159905

async def weekly_summary(weekly_news_queue):
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è OpenAI
    if weekly_news_queue:
        combined_news_rus = "\n".join([f"- {rus}" for rus, _ in weekly_news_queue])
        combined_news_eng = "\n".join([f"- {eng}" for _, eng in weekly_news_queue])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ OpenAI –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ –æ–±–æ–±—â–µ–Ω–∏—è
        try:
            response_rus = await openai.ChatCompletion.acreate(
                model="gpt-4",
                messages=[
                    {"role": "system", "content": "–°–æ–±–µ—Ä–∏ –∫–ª—é—á–µ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏ –∏–∑ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–µ–∫—Å—Ç–∞."},
                    {"role": "user", "content": combined_news_rus}
                ],
                max_tokens=3000
            )
            weekly_summary_rus = response_rus['choices'][0]['message']['content'].strip()
        except Exception as e:
            logging.error(f"Error with OpenAI API for Russian summary: {e}")
            weekly_summary_rus = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."
            await bot.send_message(ADMIN_ID, f'–û—à–∏–±–∫–∞: {e}')
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ OpenAI –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –æ–±–æ–±—â–µ–Ω–∏—è
        try:
            response_eng = await openai.ChatCompletion.acreate(
                model="gpt-4",
                messages=[
                    {"role": "system", "content": "Summarize the key events from the following news in English."},
                    {"role": "user", "content": combined_news_eng}
                ],
                max_tokens=3000
            )
            weekly_summary_eng = response_eng['choices'][0]['message']['content'].strip()
        except Exception as e:
            logging.error(f"Error with OpenAI API for English summary: {e}")
            weekly_summary_eng = "Failed to get weekly summary in English."
            await bot.send_message(ADMIN_ID, f'–û—à–∏–±–∫–∞: {e}')
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ –æ–±–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª
        await bot.send_message(
            CHANNEL_ID_MAIN,
            f"AGROCOR WEEKLY NEWSüåæ\nRUS\n\n{weekly_summary_rus}",
            disable_web_page_preview=True
        )
        await bot.send_message(
            CHANNEL_ID_MAIN,
            f"AGROCOR WEEKLY NEWS üåæ\nENG\n\n{weekly_summary_eng}",
            disable_web_page_preview=True
        )


async def generate_market_analysis():
    try:
        MARKET_ANALYSIS_PROMPT = '''–°–æ–±–µ—Ä–∏ –∫—Ä–∞—Ç–∫–∏–π —Ä—ã–Ω–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∞–≥—Ä–æ—Å—Ñ–µ—Ä—ã –∫–∞–∫–æ–π –Ω–∏–±—É–¥—å –æ—Ç–¥–µ–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏, –≤–∫–ª—é—á–∞—è —Ç–∞–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã, –∫–∞–∫ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä,
                                    –≤–ª–∏—è–Ω–∏–µ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –Ω–∞ —É—Ä–æ–∂–∞–π, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –∏ —Ç–µ—Ö–Ω–∏–∫–µ, –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã –≤ —Ç–æ—Ä–≥–æ–≤–ª–µ –∏ —Ü–µ–Ω–∞—Ö
                                    –Ω–∞ –∞–≥—Ä–æ–∫—É–ª—å—Ç—É—Ä—ã (–∑–µ—Ä–Ω–æ–≤—ã–µ, –º–∞—Å–ª–∏—á–Ω—ã–µ, –±–æ–±–æ–≤—ã–µ –∏ —Ç.–¥.), –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –ø–æ—Å—Ç–∞–≤–∫–∏, –∞ —Ç–∞–∫–∂–µ –æ–±—â–∏–µ
                                    —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –æ–∫–∞–∑–∞—Ç—å –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä—ã–Ω–∫–∏. –í–∫–ª—é—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–∏—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö –Ω–∞ —Ä—ã–Ω–∫–µ,
                                    –∞ —Ç–∞–∫–∂–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã –∏ —Ä–∏—Å–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–º–∏ —Å–µ–∑–æ–Ω–∞–º–∏.
                                    –¢–µ–º—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏—Ç–∫–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–∫–∞:
                                     GASC, TMO, TCP, OC, MIT, SAGO, GTC, OAIC, DGF, ODC, SLAL, OFAC, BRICS, CBOP, MATIF, AgRurual, strategie grains, safras & Mercado, intertek, amspec, –ø–∞–ª—å–º–æ–≤–æ–µ –º–∞—Å–ª–æ, –ø–æ—Å–µ–≤, –∫—É–∫—É—Ä—É–∑–∞, –ø—à–µ–Ω–∏—Ü–∞, —Å–æ—è, –æ—Ü–µ–Ω–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞, —è—á–º–µ–Ω—å, –ø—Ä–æ–≥–Ω–æ–∑ —É—Ä–æ–∂–∞—è, usda –æ—Ç—á–µ—Ç, –∑–∞–¥–µ—Ä–∂–∫–∞ –≥—Ä—É–∑–æ–≤, WHFOB, CRFOB, BRFOB, LCO, brent, ZS, —Å–æ–µ–≤—ã–µ –±–æ–±—ã, ZC, –∫—É–∫—É—Ä—É–∑–∞, ZW, agritel, deepwater, shallowwater, FOB, CIF, Incoterms, GAFTA, FOSFA, SBPP, SFCO, SFMP, DDGS, pulses, WASDE, Report, Rabobank, –ë–∞–ª—Ç–∏–π—Å–∫–∏–π –∏–Ω–¥–µ–∫—Å, –ò–Ω–¥–µ–∫—Å Panamax, S&P Global Commodity Insights, Abiove, Weekly Soybean Complex, IGC, oilworld.ru, FREE ON-BOARD BLACK SEA PORTS, SUNFLOWER OIL EXPORT, SUNFLOWER MEAL EXPORT, PRICE SUNFLOWER OIL U.S. DOLLAR METRIC TON, PALM OIL MALASYA CRUDE 1, NASDAQ (–±–∏—Ä–∂–∞) Commodity Index Bean Oil Excess Return, SOYBEAN OIL FUTURES FRONT-MONTH CONTRACT, MARS, NOFI, MITS, FCPOc3, –ü–æ —Å–æ–æ–±—â–µ–Ω–∏—é¬†–∞–≥–µ–Ω—Å—Ç–≤–∞¬†FryersOil world, Wheat France FOB, Wheat EU Black Sea FOB, Barley France FOB,Barley EU Black Sea, Corn Argentina FOB/
                                    Corn EU Black Sea FOB, Ameropa ,MFG, adm , vittera , CHS , cereal crop , dahra, C&F, NOFI, commodity whether group, S&D,¬†StoneX,KFA,Buildcom, Cargill , Bunge, Dreyfus, Olam¬†, Avere, Wheat flour import, wheat flour¬†export, MITS,vegoils .
'''
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
        response = await openai.ChatCompletion.acreate(
            model="gpt-4",
            messages=[
                {"role": "system", "content": MARKET_ANALYSIS_PROMPT},
                {"role": "user", "content": MARKET_ANALYSIS_PROMPT}
            ],
            max_tokens=1000
        )
        analysis_text = response['choices'][0]['message']['content'].strip()
        if len(analysis_text) > 1500:
            analysis_text = analysis_text[:1500]
        # –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
        translation_prompt = f"Please translate the following text to English:\n\n{analysis_text}"
        translation_response = await openai.ChatCompletion.acreate(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "Translate the market analysis text to English."},
                {"role": "user", "content": translation_prompt}
            ],
            max_tokens=1000
        )
        analysis_text_eng = translation_response['choices'][0]['message']['content'].strip()
        if len(analysis_text_eng) > 1500:
            analysis_text_eng = analysis_text_eng[:1500]
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–∞—Ö
        await bot.send_message(CHANNEL_ID_MAIN,
                               f"üìä –†—ã–Ω–æ—á–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ (RUS):\n{analysis_text}\n\nüìä Market Analysis (ENG):\n{analysis_text_eng}",
                               disable_web_page_preview=True)
    except Exception as e:
        await bot.send_message(ADMIN_ID,f'–û—à–∏–±–∫–∞: {e}')


# 3. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤ –æ–± –∞–≥—Ä–æ—Å—Ñ–µ—Ä–µ
async def generate_interesting_fact():
    try:
        INTERESTING_FACT_PROMPT = '''–†–∞—Å—Å–∫–∞–∂–∏ –∫—Ä–∞—Ç–∫–∏–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç –æ —Å–µ–ª—å—Å–∫–æ–º —Ö–æ–∑—è–π—Å—Ç–≤–µ, –æ—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã –∞–≥—Ä–æ—Å—Ñ–µ—Ä—ã. –§–∞–∫—Ç –º–æ–∂–µ—Ç –∫–∞—Å–∞—Ç—å—Å—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ–ª—å—Å–∫–æ–≥–æ
                    —Ö–æ–∑—è–π—Å—Ç–≤–∞, —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤ —Ä–∞–∑–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ –ø–æ–≥–æ–¥–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º, –º–µ—Ç–æ–¥—ã —É–ª—É—á—à–µ–Ω–∏—è —É—Ä–æ–∂–∞–π–Ω–æ—Å—Ç–∏),
                    —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –≤ —Å–µ–ª—å—Å–∫–æ–º —Ö–æ–∑—è–π—Å—Ç–≤–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥—Ä–æ–Ω—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ–ª–µ–π, —É–º–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –æ—Ä–æ—à–µ–Ω–∏—è, –Ω–æ–≤—ã–µ –≤–∏–¥—ã —É–¥–æ–±—Ä–µ–Ω–∏–π
                    –∏ —Å–ø–æ—Å–æ–±—ã –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è). –¢–∞–∫–∂–µ –≤–∫–ª—é—á–∏ —Ñ–∞–∫—Ç—ã –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –∫–ª–∏–º–∞—Ç–∞ –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–∏ –Ω–∞ –∞–≥—Ä–æ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ, –ª–æ–≥–∏—Å—Ç–∏–∫—É —Å–µ–ª—å—Ö–æ–∑–ø—Ä–æ–¥—É–∫—Ü–∏–∏,
                    –∏ —Ä–æ–ª–∏ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —ç–∫–æ–Ω–æ–º–∏–∫–µ. –§–∞–∫—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω —Å –Ω–µ–æ–±—ã—á–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—è, –≤–ª–∏—è–Ω–∏–µ–º –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ,
                    –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤.
                    –¢–µ–º—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤:
                     GASC, TMO, TCP, OC, MIT, SAGO, GTC, OAIC, DGF, ODC, SLAL, OFAC, BRICS, CBOP, MATIF, AgRurual, strategie grains, safras & Mercado, intertek, amspec, –ø–∞–ª—å–º–æ–≤–æ–µ –º–∞—Å–ª–æ, –ø–æ—Å–µ–≤, –∫—É–∫—É—Ä—É–∑–∞, –ø—à–µ–Ω–∏—Ü–∞, —Å–æ—è, –æ—Ü–µ–Ω–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞, —è—á–º–µ–Ω—å, –ø—Ä–æ–≥–Ω–æ–∑ —É—Ä–æ–∂–∞—è, usda –æ—Ç—á–µ—Ç, –∑–∞–¥–µ—Ä–∂–∫–∞ –≥—Ä—É–∑–æ–≤, WHFOB, CRFOB, BRFOB, LCO, brent, ZS, —Å–æ–µ–≤—ã–µ –±–æ–±—ã, ZC, –∫—É–∫—É—Ä—É–∑–∞, ZW, agritel, deepwater, shallowwater, FOB, CIF, Incoterms, GAFTA, FOSFA, SBPP, SFCO, SFMP, DDGS, pulses, WASDE, Report, Rabobank, –ë–∞–ª—Ç–∏–π—Å–∫–∏–π –∏–Ω–¥–µ–∫—Å, –ò–Ω–¥–µ–∫—Å Panamax, S&P Global Commodity Insights, Abiove, Weekly Soybean Complex, IGC, oilworld.ru, FREE ON-BOARD BLACK SEA PORTS, SUNFLOWER OIL EXPORT, SUNFLOWER MEAL EXPORT, PRICE SUNFLOWER OIL U.S. DOLLAR METRIC TON, PALM OIL MALASYA CRUDE 1, NASDAQ (–±–∏—Ä–∂–∞) Commodity Index Bean Oil Excess Return, SOYBEAN OIL FUTURES FRONT-MONTH CONTRACT, MARS, NOFI, MITS, FCPOc3, –ü–æ —Å–æ–æ–±—â–µ–Ω–∏—é¬†–∞–≥–µ–Ω—Å—Ç–≤–∞¬†FryersOil world, Wheat France FOB, Wheat EU Black Sea FOB, Barley France FOB,Barley EU Black Sea, Corn Argentina FOB/
                    Corn EU Black Sea FOB, Ameropa ,MFG, adm , vittera , CHS , cereal crop , dahra, C&F, NOFI, commodity whether group, S&D,¬†StoneX,KFA,Buildcom, Cargill , Bunge, Dreyfus, Olam¬†, Avere, Wheat flour import, wheat flour¬†export, MITS,vegoils .
'''

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
        response = await openai.ChatCompletion.acreate(
            model="gpt-4",
            messages=[
                {"role": "system", "content": INTERESTING_FACT_PROMPT},
                {"role": "user", "content": INTERESTING_FACT_PROMPT}
            ],
            max_tokens=1000
        )
        fact_text = response['choices'][0]['message']['content'].strip()
        if len(fact_text) > 1500:
            fact_text = fact_text[:1500]
        # –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
        translation_prompt = f"Please translate the following text to English:\n\n{fact_text}"
        translation_response = await openai.ChatCompletion.acreate(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "Translate the interesting fact text to English."},
                {"role": "user", "content": translation_prompt}
            ],
            max_tokens=1000
        )
        fact_text_eng = translation_response['choices'][0]['message']['content'].strip()
        if len(fact_text_eng) > 1500:
            fact_text_eng = fact_text_eng[:1500]
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–∞—Ö
        await bot.send_message(CHANNEL_ID_MAIN,
                               f"üåæ –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç (RUS):\n{fact_text}\n\nüåæ Interesting Fact (ENG):\n{fact_text_eng}",
                               disable_web_page_preview=True)

    except Exception as e:
        await bot.send_message(ADMIN_ID,f'–û—à–∏–±–∫–∞: {e}')


async def main_post():
    await bot.send_message(CHANNEL_ID_MAIN, f'''
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è üìä
üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–∏:
–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ AGROCOR –Ω–∞—Å —É–∂–µ {get_telegram_subscribers()} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤!

üîé –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π:
üìà –ù–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: 1000
üìâ –û—Ç–ø–∏—Å–∞–≤—à–∏—Ö—Å—è: 17
üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤ –¥–µ–Ω—å: 9

–ö–∞–Ω–∞–ª—ã –∏ –±–æ—Ç—ã AGROCOR:

ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –±–æ—Ç: https://t.me/agrocorassistant_bot
üö¢ –§—Ä–∞—Ö—Ç –±–æ—Ç: https://t.me/agrocorfreightassistant_bot
üåç –ù–æ–≤–æ—Å—Ç–∏ –∞–≥—Ä–æ—Å–µ–∫—Ç–æ—Ä–∞: https://t.me/agrocornews_channel
üì¨ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: https://t.me/+Qo-k-cCWpb9hMGIy
üìù –ó–∞–ø—Ä–æ—Å—ã: https://t.me/+xFOPd8ApOjVmNmFi
üë® –ë–æ—Ç –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤: https://t.me/agrocor_companion_bot

‚ö°Ô∏è –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏!
–ú—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –≥–æ—Ç–æ–≤—ã –¥–µ–ª–∏—Ç—å—Å—è —Å –≤–∞–º–∏ —Å–∞–º–æ–π –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π! üå± –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –Ω–∞—à–∏–º –∫–∞–Ω–∞–ª–æ–º —Å –¥—Ä—É–∑—å—è–º–∏, —á—Ç–æ–±—ã –Ω–∞—Å —Å—Ç–∞–ª–æ –µ—â—ë –±–æ–ª—å—à–µ!''')




